

var n, m: integer;
var a: array[0 .. 100000] of integer;

procedure main();
var i: integer;
begin
    n := 50; m := 1997;
    // n := 5000; m := 1000000009;
    a[1] := 1;
    a[2] := 2;
    for i := 3 to n do a[i] := ((3 * a[i-1]) mod m - (4 * a[i-2]) mod m + m) mod m;

    ha_log_arr();
    // ha_i_space(ha_check_arr());

    sort(1, n);

    ha_log_arr();
    // ha_i_space(ha_check_arr());
end

procedure sort(l, r: integer);
var x,i,j: integer;
begin
    if l >= r then return;
    x := (l+r) div 2;
    i := l;
    j := r;
    while i <= j do begin
        while a[i] < a[x] do i := i+1;
        while a[j] > a[x] do j := j-1;
        if i <= j then begin
            with tmp: integer; do begin 
                tmp := a[i]; a[i] := a[j]; a[j] := tmp;
            end
            i := i+1;
            j := j-1;
        end
    end
    sort(l, j);
    sort(i, r);
end

function ha_check_arr(): integer;
var i: integer;
begin
    with res: integer; do begin
        res := 0;
        for i := 1 to n do res := (res + a[i] * i mod m) mod m;
        return res;
    end
end

procedure ha_log_arr();
var i: integer;
begin
    for i := 1 to n do ha_i_space(a[i]);
    putLn();
end

procedure ha_i_space(ha0852i: integer); begin putInt(ha0852i); putString(" "); end

